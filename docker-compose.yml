
services:
  # Frontend - Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: race-calendar-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:5000/api/v1
    depends_on:
      - backend
    networks:
      - race-calendar-network
    restart: unless-stopped

  # Backend - Express API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: race-calendar-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/race_calendar
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=race_calendar
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - JWT_SECRET=your-secret-key-change-in-production
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - mongo
      - postgres
    networks:
      - race-calendar-network
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs

  # MongoDB
  mongo:
    image: mongo:7.0
    container_name: race-calendar-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=race_calendar
    volumes:
      - mongo_data:/data/db
      - ./backend/database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - race-calendar-network
    restart: unless-stopped

  # PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: race-calendar-postgres
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=race_calendar
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - race-calendar-network
    restart: unless-stopped

networks:
  race-calendar-network:
    driver: bridge

volumes:
  mongo_data:
  postgres_data:
